{"version":3,"sources":["states/category-reducers.js","states/record-reducers.js","states/chart-reducers.js","components/record/main/left/Statistics.js","components/record/main/left/RecordItem.js","api/record.js","states/chart-actions.js","api/chart.js","states/record-modal/edit-record-actions.js","states/record-actions.js","components/record/main/left/DailyRecord.js","components/record/main/left/RecordList.js","components/record/main/left/AllRecords.js","components/record/main/right/modal/modalItems/TypeDropDown.js","components/record/main/right/modal/modalItems/CategoryDropDown.js","components/record/main/right/modal/modalItems/MethodDropDown.js","components/record/main/right/modal/modalItems/Datepicker.js","components/record/main/right/modal/EditRecordModal.js","components/record/main/right/RecordDetail.js","components/chart/main/StatisticsChart.js","api/category.js","states/category-actions.js","components/category/main/Categories.js","containers/Main.js","states/record-modal/new-record-actions.js","components/record/navbar/modal/modalItems/TypeDropDown.js","components/record/navbar/modal/modalItems/CategoryDropDown.js","components/record/navbar/modal/modalItems/MethodDropDown.js","components/record/navbar/modal/modalItems/Datepicker.js","components/record/navbar/modal/NewRecordModal.js","components/record/navbar/NewRecordBtn.js","components/record/navbar/Monthpicker.js","components/category/navbar/TypeDropDown.js","components/category/navbar/NewCategoryModal.js","components/category/navbar/NewCategoryBtn.js","components/chart/navbar/TypeDropDown.js","containers/Navbar.js","components/Sidebar.js","containers/App.js","index.js"],"names":["initCategoryState","categoryLoading","expensesCategories","incomeCategories","category","state","arguments","length","undefined","action","type","Object","objectSpread","initNewCategoryFormState","typeDropdown","value","open","name","danger","show","newCategoryForm","categoryType","initMonth","Date","getMonth","month","initYear","getFullYear","year","initRecordState","recordLoading","monthRecord","id","income","expenses","dailyRecords","record","initRecordDetailState","paymentMethod","amount","date","remarks","recordDetail","recordType","initRecordSelectedState","recordSelected","initEditRecordFormState","paymentMethodDropdown","categoryDropdown","editRecordForm","initNewRecordFormState","getTime","newRecordForm","initChartState","chartValue","chart","Statistics","_this$props","this","props","balance","react_default","a","createElement","className","Typography","variant","color","React","Component","RecordItem","recordBaseUrl","toggleTypeDropdown","setTypeDropdownValue","getChart","dispatch","url","concat","console","log","axios","get","then","res","status","Error","data","getChartFromApi","endListChart","setEditRecordForm","recordItem","toggleMethodDropdown","setMethodDropdownValue","toggleCategoryDropdown","setCategoryDropdownValue","setDate","remarksInput","amountInput","amountInputDanger","toggleModal","editRecord","modifiedRecord","getState","put","editRecordFromApi","getMonthRecord","selectRecord","setMonth","setYear","loading","getMonthRecordFromApi","endListMonthRecord","deleteRecord","delete","deleteRecordFromApi","resetRecordSelected","setRecordDetail","DailyRecord","_this","_this2","classes","recordItems","children","map","index","isLastItem","Fragment","key","ListItem","button","onClick","main_left_RecordItem","Divider","light","List","component","subheader","ListSubheader","dateFormat","daily_record","connect","withStyles","fontSize","width","border","borderRadius","backgroundColor","boxShadow","marginBottom","paddingBottom","RecordList","dailyRecord","left_DailyRecord","AllRecords","lib_default","left_Statistics","main_left_RecordList","TypeDropDown","handleDropdownToggle","handleDropdownSelect","_this$props2","ButtonDropdown","isOpen","toggle","DropdownToggle","caret","outline","DropdownMenu","DropdownItem","CategoryDropDown","dropdown","categoryItem","modifiers","setMaxHeight","enabled","fn","styles","overflow","maxHeight","MethodDropDown","Datepicker","handleDateChange","e","CustomInput","forwardRef","ref","readOnly","react_datepicker_es","customInput","selected","onChange","EditRecordModal","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleFormSubmit","handleClose","handleAmountChange","target","Number","handleRemarksChange","amountInputEl","remarksInputEl","_this$props3","Modal","onHide","Body","detail_item","modal_modalItems_TypeDropDown","modal_modalItems_MethodDropDown","modal_modalItems_CategoryDropDown","Input","innerRef","el","modal_modalItems_Datepicker","Footer","edit_btn","margin","justifyContent","padding","RecordDetail","editTooltipOpen","deleteTooltipOpen","editToggle","setState","deleteToggle","Tooltip","placement","right_modal_EditRecordModal","record_detail","StatisticsChart","chartValueInArray","keys","unshift","index_esm","height","chartType","loader","options","legend","position","alignment","textStyle","pieSliceText","categoryBaseUrl","getCategories","getCategory","getExpensesCategories","getCategoriesFromApi","categories","getIncomeCategories","Promise","all","deleteCategory","deleteCategoryFromApi","resetForm","nameInput","nameInputDanger","createCategory","post","createCategoryFromApi","Categories","list","categoryList","category_item","charAt","toUpperCase","slice","category_list","paddingTop","& i","opacity","marginRight","&:hover","cursor","& i:hover","Main","react_router","path","render","main_left_AllRecords","main_right_RecordDetail","chart_main_StatisticsChart","category_main_Categories","from","to","createRecord","newRocord","newRecord","createRecordFromApi","NewRecordModal","record_navbar_modal_modalItems_TypeDropDown","record_navbar_modal_modalItems_MethodDropDown","record_navbar_modal_modalItems_CategoryDropDown","record_navbar_modal_modalItems_Datepicker","add_btn","NewRecordBtn","navbar_modal_NewRecordModal","Monthpicker","handleMonthChange","_callee","regenerator_default","wrap","_context","prev","next","stop","monthPickerValue","showMonthYearPicker","popperModifiers","offset","NewCategoryModal","handleNameChange","inputEl","category_navbar_TypeDropDown","NewCategoryBtn","category_navbar_NewCategoryModal","Navbar","record_navbar_Monthpicker","record_navbar_NewRecordBtn","components_chart_navbar_TypeDropDown","category_navbar_NewCategoryBtn","Sidebar","handleStateChange","menuOpen","closeMenu","BurgerMenu","assign","onStateChange","react_router_dom","App","src_components_Sidebar","pageWrapId","outerContainerId","src_containers_Navbar","src_containers_Main","window","onload","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","combineReducers","applyMiddleware","thunkMiddleware","ReactDOM","react_redux_es","containers_App","document","getElementById"],"mappings":"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","file":"static/js/main.f0b07b84.chunk.js","sourcesContent":["/* Categories */\n\nconst initCategoryState = {\n    categoryLoading: false,\n    expensesCategories: [],\n    incomeCategories: [],\n};\n\n\nexport function category(state = initCategoryState, action) {\n    switch (action.type) {\n        case '@CATEGORY/START_LOADING':\n            return {\n                ...state,\n                categoryLoading: true\n            };\n        case '@CATEGORY/END_LOADING':\n            return {\n                ...state,\n                categoryLoading: false\n            };\n        case '@CATEGORY/END_LIST_EXPENSES_CATEGORIES':\n            return {\n                ...state,\n                expensesCategories: action.expensesCategories\n            };\n        case '@CATEGORY/END_LIST_INCOME_CATEGORIES':\n            return {\n                ...state,\n                incomeCategories: action.incomeCategories\n            };\n        default:\n            return state;\n    }\n}\n\n/* NewCategoryForm */\n\nconst initNewCategoryFormState = {\n    typeDropdown: {\n        value: 'expenses',\n        open: false,\n    },\n    name: {\n        value: '',\n        danger: false,\n    },\n    show: false,\n};\n\n\nexport function newCategoryForm(state = initNewCategoryFormState, action) {\n    switch (action.type) {\n        case '@NEW_CATEGORY_FORM/TOGGLE_MODAL':\n            return {\n                ...state,\n                show: !state.show\n            };\n        case '@NEW_CATEGORY_FORM/SET_TYPE_DROPDOWN_VALUE':\n            return {\n                ...state,\n                typeDropdown: {\n                    ...state.typeDropdown,\n                    value: action.categoryType,\n                },\n            };\n        case '@NEW_CATEGORY_FORM/TOGGLE_TYPE_DROPDOWN':\n            return {\n                ...state,\n                typeDropdown: {\n                    ...state.typeDropdown,\n                    open: !state.typeDropdown.open,\n                },\n            }\n        case '@NEW_CATEGORY_FORM/NAME_INPUT':\n            return {\n                ...state,\n                name: {\n                    ...state.name,\n                    value: action.name\n                },\n            };\n        case '@NEW_CATEGORY_FORM/NAME_INPUT_DANGER':\n            return {\n                ...state,\n                name: {\n                    ...state.name,\n                    danger: action.danger\n                },\n            };\n        case '@NEW_CATEGORY_FORM/RESET_FORM':\n            return {\n                ...initNewCategoryFormState,\n            }\n        default:\n            return state;\n    }\n}","/* Month */\n\nconst initMonth = (new Date()).getMonth() + 1;\n\nexport function month(state = initMonth, action) {\n    switch (action.type) {\n        case '@MONTH/SET_MONTH':\n            return action.month;\n        default:\n            return state;\n    }\n}\n\n/* Year */\n\nconst initYear = (new Date()).getFullYear();\n\nexport function year(state = initYear, action) {\n    switch (action.type) {\n        case '@YEAR/SET_YEAR':\n            return action.year;\n        default:\n            return state;\n    }\n}\n\n/* Record */\n\nconst initRecordState = {\n    recordLoading: false,\n    monthRecord: {\n        id: null,\n        month: (new Date()).getMonth(),\n        income: 0,\n        expenses: 0,\n        dailyRecords: [],\n    }\n}\n\nexport function record(state = initRecordState, action) {\n    switch (action.type) {\n        case '@RECORD/START_LOADING':\n            return {\n                ...state,\n                recordLoading: true\n            };\n        case '@RECORD/END_LOADING':\n            return {\n                ...state,\n                recordLoading: false\n            };\n        case '@RECORD/END_LIST_MONTH_RECORD':\n            return {\n                ...state,\n                monthRecord: action.monthRecord\n            };\n        default:\n            return state;\n    }\n}\n\n/* RecordDetail */\n\nconst initRecordDetailState = {\n    id: null,\n    category: 'meal',\n    type: 'expenses',\n    paymentMethod: 'cash',\n    amount: 0,\n    date: null,\n    remarks: '',\n};\n\n\nexport function recordDetail(state = initRecordDetailState, action) {\n    switch (action.type) {\n        case '@RECORD_DETAIL/SET_RECORD_DETAIL':\n            return {\n                ...state,\n                id: action.id,\n                category: action.category,\n                type: action.recordType,\n                paymentMethod: action.paymentMethod,\n                amount: action.amount,\n                date: action.date,\n                remarks: action.remarks,\n            };\n        default:\n            return state;\n    }\n}\n\n/* RecordSelected */\n\nconst initRecordSelectedState = false;\n\nexport function recordSelected(state = initRecordSelectedState, action) {\n    switch (action.type) {\n        case '@RECORD_SELECTED/RECORD_SELECTED':\n            return true;\n        case '@RECORD_SELECTED/RESET_RECORD_SELECTED':\n            return false;\n        default:\n            return state;\n    }\n}\n\n/* EditRecordForm */\n\nconst initEditRecordFormState = {\n    id: null,\n    typeDropdown: {\n        open: false,\n        value: 'expenses',\n    },\n    paymentMethodDropdown: {\n        open: false,\n        value: 'cash',\n    },\n    categoryDropdown: {\n        open: false,\n        value: 'meal',\n    },\n    amount: {\n        value: 0,\n        danger: false,\n    },\n    date: null,\n    remarks: '',\n    show: false,\n};\n\nexport function editRecordForm(state = initEditRecordFormState, action) {\n    switch (action.type) {\n        case '@EDIT_RECORD_FORM/SET_EDIT_RECORD_FORM':\n            return {\n                ...state,\n                id: action.id,\n                categoryDropdown: {\n                    ...state.categoryDropdown,\n                    value: action.category,\n                },\n                typeDropdown: {\n                    ...state.typeDropdown,\n                    value: action.recordType,\n                },\n                paymentMethodDropdown: {\n                    ...state.paymentMethodDropdown,\n                    value: action.paymentMethod,\n                },\n                amount: {\n                    ...state.amount,\n                    value: action.amount,\n                },\n                date: action.date,\n                remarks: action.remarks,\n            };\n\n        case '@EDIT_RECORD_FORM/TOGGLE_TYPE_DROPDOWN':\n            return {\n                ...state,\n                typeDropdown: {\n                    ...state.typeDropdown,\n                    open: !state.typeDropdown.open,\n                },\n            }\n        case '@EDIT_RECORD_FORM/SET_TYPE_DROPDOWN_VALUE':\n            return {\n                ...state,\n                typeDropdown: {\n                    ...state.typeDropdown,\n                    value: action.recordType,\n                },\n            }\n\n        case '@EDIT_RECORD_FORM/TOGGLE_METHOD_DROPDOWN':\n            return {\n                ...state,\n                paymentMethodDropdown: {\n                    ...state.paymentMethodDropdown,\n                    open: !state.paymentMethodDropdown.open,\n                },\n            }\n        case '@EDIT_RECORD_FORM/SET_METHOD_DROPDOWN_VALUE':\n            return {\n                ...state,\n                paymentMethodDropdown: {\n                    ...state.paymentMethodDropdown,\n                    value: action.paymentMethod,\n                },\n            }\n        case '@EDIT_RECORD_FORM/TOGGLE_CATEGORY_DROPDOWN':\n            return {\n                ...state,\n                categoryDropdown: {\n                    ...state.categoryDropdown,\n                    open: !state.categoryDropdown.open,\n                },\n            }\n        case '@EDIT_RECORD_FORM/SET_CATEGORY_DROPDOWN_VALUE':\n            return {\n                ...state,\n                categoryDropdown: {\n                    ...state.categoryDropdown,\n                    value: action.category,\n                },\n            }\n        case '@EDIT_RECORD_FORM/SET_DATE':\n            return {\n                ...state,\n                date: action.date,\n            }\n        case '@EDIT_RECORD_FORM/REMARKS_INPUT':\n            return {\n                ...state,\n                remarks: action.remarks,\n            }\n        case '@EDIT_RECORD_FORM/AMOUNT_INPUT':\n            return {\n                ...state,\n                amount: {\n                    ...state.amount,\n                    value: action.amount\n                },\n            }\n        case '@EDIT_RECORD_FORM/AMOUNT_INPUT_DANGER':\n            return {\n                ...state,\n                amount: {\n                    ...state.amount,\n                    danger: action.danger\n                },\n            }\n        case '@EDIT_RECORD_FORM/TOGGLE_MODAL':\n            return {\n                ...state,\n                show: !state.show,\n            }\n        default:\n            return state;\n    }\n}\n\n\n/* NewRecordForm */\n\nconst initNewRecordFormState = {\n    typeDropdown: {\n        open: false,\n        value: 'expenses',\n    },\n    paymentMethodDropdown: {\n        open: false,\n        value: 'cash',\n    },\n    categoryDropdown: {\n        open: false,\n        value: 'meal',\n    },\n    amount: {\n        value: null,\n        danger: false,\n    },\n    date: new Date().getTime(),\n    remarks: '',\n    show: false,\n};\n\nexport function newRecordForm(state = initNewRecordFormState, action) {\n    switch (action.type) {\n        case '@NEW_RECORD_FORM/SET_NEW_RECORD_FORM':\n            return {\n                ...state,\n                categoryDropdown: {\n                    ...state.categoryDropdown,\n                    value: action.category,\n                },\n                typeDropdown: {\n                    ...state.typeDropdown,\n                    value: action.recordType,\n                },\n                paymentMethodDropdown: {\n                    ...state.paymentMethodDropdown,\n                    value: action.paymentMethod,\n                },\n                amount: {\n                    ...state.amount,\n                    value: action.amount,\n                },\n                date: action.date,\n                remarks: action.remarks,\n            };\n\n        case '@NEW_RECORD_FORM/TOGGLE_TYPE_DROPDOWN':\n            return {\n                ...state,\n                typeDropdown: {\n                    ...state.typeDropdown,\n                    open: !state.typeDropdown.open,\n                },\n            }\n        case '@NEW_RECORD_FORM/SET_TYPE_DROPDOWN_VALUE':\n            return {\n                ...state,\n                typeDropdown: {\n                    ...state.typeDropdown,\n                    value: action.recordType,\n                },\n            }\n\n        case '@NEW_RECORD_FORM/TOGGLE_METHOD_DROPDOWN':\n            return {\n                ...state,\n                paymentMethodDropdown: {\n                    ...state.paymentMethodDropdown,\n                    open: !state.paymentMethodDropdown.open,\n                },\n            }\n        case '@NEW_RECORD_FORM/SET_METHOD_DROPDOWN_VALUE':\n            return {\n                ...state,\n                paymentMethodDropdown: {\n                    ...state.paymentMethodDropdown,\n                    value: action.paymentMethod,\n                },\n            }\n        case '@NEW_RECORD_FORM/TOGGLE_CATEGORY_DROPDOWN':\n            return {\n                ...state,\n                categoryDropdown: {\n                    ...state.categoryDropdown,\n                    open: !state.categoryDropdown.open,\n                },\n            }\n        case '@NEW_RECORD_FORM/SET_CATEGORY_DROPDOWN_VALUE':\n            return {\n                ...state,\n                categoryDropdown: {\n                    ...state.categoryDropdown,\n                    value: action.category,\n                },\n            }\n        case '@NEW_RECORD_FORM/SET_DATE':\n            return {\n                ...state,\n                date: action.date,\n            }\n        case '@NEW_RECORD_FORM/REMARKS_INPUT':\n            return {\n                ...state,\n                remarks: action.remarks,\n            }\n        case '@NEW_RECORD_FORM/AMOUNT_INPUT':\n            return {\n                ...state,\n                amount: {\n                    ...state.amount,\n                    value: action.amount\n                },\n            }\n        case '@NEW_RECORD_FORM/AMOUNT_INPUT_DANGER':\n            return {\n                ...state,\n                amount: {\n                    ...state.amount,\n                    danger: action.danger\n                },\n            }\n        case '@NEW_RECORD_FORM/TOGGLE_MODAL':\n            return {\n                ...state,\n                show: !state.show,\n            }\n        case '@NEW_RECORD_FORM/RESET_FORM':\n            return {\n                ...initNewRecordFormState,\n            }\n        default:\n            return state;\n    }\n}\n\n\n\n","\n/* Chart */\n\nconst initChartState = {\n    typeDropdown: {\n        value: 'expenses',\n        open: false,\n    },\n    chartValue: {},\n}\n\nexport function chart(state = initChartState, action) {\n    switch (action.type) {\n        case '@CHART/SET_TYPE_DROPDOWN_VALUE':\n            return {\n                ...state,\n                typeDropdown: {\n                    ...state.typeDropdown,\n                    value: action.categoryType,\n                },\n            };\n        case '@CHART/TOGGLE_TYPE_DROPDOWN':\n            return {\n                ...state,\n                typeDropdown: {\n                    ...state.typeDropdown,\n                    open: !state.typeDropdown.open,\n                },\n            }\n        case '@CHART/END_LIST_CHART':\n            return {\n                ...state,\n                chartValue: action.chartValue\n            };\n        default:\n            return state;\n    }\n\n}","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\n\nimport './Statisics.css';\n\nclass Statistics extends React.Component {\n    render() {\n        const { income, expenses } = this.props;\n        const balance = income - expenses;\n\n        return (\n            <div className='d-flex flex-row justify-content-center statisics'>\n                <div className='d-flex flex-column align-items-center statistics-box'>\n                    <Typography variant=\"body1\">\n                        Income\n                    </Typography>\n                    <Typography variant=\"h6\">\n                        {income}\n                    </Typography>\n                </div>\n                <div className='align-self-center divider'></div>\n                <div className='d-flex flex-column align-items-center statistics-box'>\n                    <Typography variant=\"body1\">\n                        Expenses\n                    </Typography>\n                    <Typography variant=\"h6\">\n                        {expenses}\n                    </Typography>\n                </div>\n                <div className='align-self-center divider'></div>\n                <div>\n                    <div className='d-flex flex-column align-items-center statistics-box'>\n                        <Typography variant=\"body1\">\n                            Balance\n                        </Typography>\n                        <Typography variant=\"h6\" color={balance >= 0 ? \"initial\" : \"error\"}>\n                            {balance}\n                        </Typography>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Statistics;","import React from 'react';\n\nimport './RecordItem.css';\n\nclass RecordItem extends React.Component {\n    render() {\n        const { type, paymentMethod, category, amount, remarks } = this.props;\n\n        return (\n            <div className='d-flex flex-row justify-content-between record-item'>\n                <div>{remarks === '' ? category : remarks}</div>\n                <div>{type === 'income' ? amount : -amount}</div>\n            </div>\n        );\n    }\n}\n\nexport default RecordItem;","import axios from 'axios';\n\nconst recordBaseUrl = 'http://localhost:8080/api/record';\n\nexport const getMonthRecord = (year, month) => {\n\n    let url = `${recordBaseUrl}?year=${year}&month=${month}`;\n\n    console.log(`Making GET request to: ${url}`);\n\n    return axios.get(url).then((res) => {\n        if (res.status !== 200)\n            throw new Error(`Unexpected response code: ${res.status}`);\n\n        return res.data;\n    });\n}\n\nexport const createRecord = (newRecord) => {\n\n    let url = recordBaseUrl;\n\n    console.log(`Making POST request to: ${url}`);\n\n    return axios.post(url, newRecord).then((res) => {\n        if (res.status !== 200)\n            throw new Error(`Unexpected response code: ${res.status}`);\n\n        return res.data;\n    });\n}\n\nexport const editRecord = (modifiedRecord) => {\n\n    let url = recordBaseUrl;\n\n    console.log(`Making POST request to: ${url}`);\n\n    return axios.put(url, modifiedRecord).then((res) => {\n        if (res.status !== 200)\n            throw new Error(`Unexpected response code: ${res.status}`);\n\n        return res.data;\n    });\n}\n\nexport const deleteRecord = (id) => {\n\n    let url = `${recordBaseUrl}/${id}`;\n\n    console.log(`Making DELETE request to: ${url}`);\n\n    return axios.delete(url).then((res) => {\n        if (res.status !== 200)\n            throw new Error(`Unexpected response code: ${res.status}`);\n\n        return res.data;\n    });\n}\n\n","import { getChart as getChartFromApi } from '../api/chart';\n\nconst endListChart = (chartValue) => {\n    return {\n        type: '@CHART/END_LIST_CHART',\n        chartValue,\n    }\n}\n\nexport const toggleTypeDropdown = () => {\n    return {\n        type: '@CHART/TOGGLE_TYPE_DROPDOWN',\n    }\n}\n\nexport const setTypeDropdownValue = (type) => {\n    const categoryType = type;\n\n    return {\n        type: '@CHART/SET_TYPE_DROPDOWN_VALUE',\n        categoryType,\n    }\n}\n\nexport const getChart = (year, month, type) => {\n    return (dispatch) => {\n        return getChartFromApi(year, month, type).then(chartValue => {\n            dispatch(endListChart(chartValue));\n        })\n    }\n}","import axios from 'axios';\n\nconst chartBaseUrl = 'http://localhost:8080/api/chart';\n\nexport const getChart = (year, month, type) => {\n    let url = `${chartBaseUrl}?year=${year}&month=${month}&type=${type}`;\n\n    console.log(`Making GET request to: ${url}`);\n\n    return axios.get(url).then((res) => {\n        if (res.status !== 200)\n            throw new Error(`Unexpected response code: ${res.status}`);\n\n        return res.data;\n    });\n}\n","import { editRecord as editRecordFromApi } from '../../api/record';\n\nimport { getMonthRecord, selectRecord } from '../record-actions';\n\nimport { getChart } from '../chart-actions';\n\n/* EditRecordForm */\n\nexport const setEditRecordForm = (recordItem) => {\n    const { id, category, type, paymentMethod, amount, date, remarks } = recordItem;\n    const recordType = type;\n\n    return {\n        type: '@EDIT_RECORD_FORM/SET_EDIT_RECORD_FORM',\n        id,\n        category,\n        recordType,\n        paymentMethod,\n        amount,\n        date,\n        remarks\n    };\n}\n\nexport const toggleTypeDropdown = () => {\n    return {\n        type: '@EDIT_RECORD_FORM/TOGGLE_TYPE_DROPDOWN',\n    }\n}\n\nexport const setTypeDropdownValue = (type) => {\n    const recordType = type;\n\n    return {\n        type: '@EDIT_RECORD_FORM/SET_TYPE_DROPDOWN_VALUE',\n        recordType\n    }\n}\n\n\nexport const toggleMethodDropdown = () => {\n    return {\n        type: '@EDIT_RECORD_FORM/TOGGLE_METHOD_DROPDOWN',\n    }\n}\n\nexport const setMethodDropdownValue = (paymentMethod) => {\n    return {\n        type: '@EDIT_RECORD_FORM/SET_METHOD_DROPDOWN_VALUE',\n        paymentMethod\n    }\n}\n\nexport const toggleCategoryDropdown = () => {\n    return {\n        type: '@EDIT_RECORD_FORM/TOGGLE_CATEGORY_DROPDOWN',\n    }\n}\n\nexport const setCategoryDropdownValue = (category) => {\n    return {\n        type: '@EDIT_RECORD_FORM/SET_CATEGORY_DROPDOWN_VALUE',\n        category\n    }\n}\n\nexport const setDate = (date) => {\n    return {\n        type: '@EDIT_RECORD_FORM/SET_DATE',\n        date\n    }\n}\n\nexport const remarksInput = (remarks) => {\n    return {\n        type: '@EDIT_RECORD_FORM/REMARKS_INPUT',\n        remarks\n    }\n}\n\nexport const amountInput = (amount) => {\n    return {\n        type: '@EDIT_RECORD_FORM/AMOUNT_INPUT',\n        amount\n    }\n}\n\nexport const amountInputDanger = (danger) => {\n    return {\n        type: '@EDIT_RECORD_FORM/AMOUNT_INPUT_DANDER',\n        danger\n    }\n}\n\nexport const toggleModal = () => {\n    return {\n        type: '@EDIT_RECORD_FORM/TOGGLE_MODAL',\n    }\n}\n\nexport const editRecord = (modifiedRecord) => {\n    return (dispatch, getState) => {\n        return editRecordFromApi(modifiedRecord).then(() => {\n            const year = getState().year;\n            const month = getState().month;\n            const type = getState().chart.typeDropdown.value;\n\n            dispatch(getMonthRecord(year, month));\n            dispatch(getChart(year, month, type));\n        }).then(() => {\n            dispatch(selectRecord(modifiedRecord));\n        });\n    }\n}\n","import {\n    getMonthRecord as getMonthRecordFromApi,\n    deleteRecord as deleteRecordFromApi,\n} from '../api/record';\n\nimport { setEditRecordForm } from './record-modal/edit-record-actions';\n\nimport { getChart } from './chart-actions';\n\n\n/* Month */\n\nexport const setMonth = (month) => {\n    return {\n        type: '@MONTH/SET_MONTH',\n        month,\n    }\n}\n\n/* Year */\n\nexport const setYear = (year) => {\n    return {\n        type: '@YEAR/SET_YEAR',\n        year,\n    }\n}\n\n/* Record */\n\nconst startLoading = () => {\n    return {\n        type: '@RECORD/START_LOADING'\n    };\n}\n\nconst endLoading = () => {\n    return {\n        type: '@RECORD/END_LOADING'\n    };\n}\n\nconst endListMonthRecord = (monthRecord) => {\n    return {\n        type: '@RECORD/END_LIST_MONTH_RECORD',\n        monthRecord\n    };\n}\n\nexport const getMonthRecord = (year, month, loading = false) => {\n    return (dispatch) => {\n        if (!loading)\n            dispatch(startLoading());\n\n        return getMonthRecordFromApi(year, month).then(monthRecord => {\n            dispatch(endListMonthRecord(monthRecord));\n            dispatch(endLoading());\n        });\n    }\n}\n\nexport const deleteRecord = (id) => {\n    return (dispatch, getState) => {\n        return deleteRecordFromApi(id).then(() => {\n            const year = getState().year;\n            const month = getState().month;\n            const type = getState().chart.typeDropdown.value;\n\n            dispatch(getMonthRecord(year, month));\n            dispatch(getChart(year, month, type));\n        }).then(() => {\n            dispatch(resetRecordSelected());\n        });\n    }\n}\n\n\n/* RecordDetail */\n\nconst setRecordDetail = (recordItem) => {\n    const { id, category, type, paymentMethod, amount, date, remarks } = recordItem;\n    const recordType = type;\n\n    return {\n        type: '@RECORD_DETAIL/SET_RECORD_DETAIL',\n        id,\n        category,\n        recordType,\n        paymentMethod,\n        amount,\n        date,\n        remarks\n    };\n}\n\nexport const selectRecord = (recordItem) => {\n    return (dispatch) => {\n        dispatch(setRecordDetail(recordItem));\n        dispatch(setEditRecordForm(recordItem));\n    }\n}\n\n/* RecordSelected */\n\nexport const recordSelected = () => {\n    return {\n        type: '@RECORD_SELECTED/RECORD_SELECTED',\n    }\n}\n\nexport const resetRecordSelected = () => {\n    return {\n        type: '@RECORD_SELECTED/RESET_RECORD_SELECTED'\n    }\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport dateFormat from 'dateformat';\nimport { connect } from 'react-redux';\n\nimport RecordItem from './RecordItem';\n\nimport { selectRecord, recordSelected } from '../../../../states/record-actions';\n\n\nconst styles = {\n    subheader: {\n        fontSize: \"0.8rem\",\n    },\n    daily_record: {\n        width: \"100%\",\n        border: \"1px solid rgba(0, 0, 0, 0.1)\",\n        borderRadius: \"0.25rem\",\n        backgroundColor: \"rgb(255, 255, 255)\",\n        boxShadow: \"0 0.25rem 0.75rem rgba(0, 0, 0, 0.1)\",\n        marginBottom: \"2rem\",\n        paddingBottom: \"0\",\n    }\n};\n\nclass DailyRecord extends React.Component {\n\n    static propTypes = {\n        recordSelected: PropTypes.bool,\n    }\n\n    selectRecord = (recordItem) => {\n        this.props.dispatch(selectRecord(recordItem));\n\n        if (this.props.recordSelected === false)\n            this.props.dispatch(recordSelected());\n    }\n\n    render() {\n        const { classes, recordItems, date, income, expenses } = this.props;\n\n        let children = recordItems.map((recordItem, index) => {\n            let isLastItem = false;\n\n            if ((index + 1) === recordItems.length)\n                isLastItem = true;\n\n            return (\n                <React.Fragment key={recordItem.id}>\n                    <ListItem button={true} onClick={() => this.selectRecord(recordItem)}>\n                        <RecordItem {...recordItem} />\n                    </ListItem>\n                    {isLastItem ? <div /> : <Divider light={true} />}\n                </React.Fragment>)\n        });\n\n        return (\n            <List\n                component=\"nav\"\n                subheader={<ListSubheader component=\"div\" className={`d-flex flex-row justify-content-between ${classes.subheader}`}>\n                    <div>{dateFormat(date, 'mm/dd\\xa0\\xa0ddd')}</div>\n                    <div>income:{income}&nbsp;&nbsp;&nbsp;expenses:{expenses}</div>\n                </ListSubheader>}\n                className={classes.daily_record}\n            >\n                <Divider />\n                {children}\n            </List>\n        );\n    }\n}\n\nexport default connect(state => ({\n    recordSelected: state.recordSelected,\n}))(withStyles(styles)(DailyRecord));","import React from 'react';\n\nimport DailyRecord from './DailyRecord';\n\nimport './RecordList.css';\n\nclass RecordList extends React.Component {\n\n\n    render() {\n        const { dailyRecords } = this.props;\n\n        let children = dailyRecords.map((dailyRecord) => {\n\n            return <DailyRecord\n                key={dailyRecord.id}\n                recordItems={dailyRecord.recordItems}\n                date={dailyRecord.date}\n                income={dailyRecord.income}\n                expenses={dailyRecord.expenses} />\n        });\n\n        return <div className='record-list' >{children}</div>;\n    }\n}\n\nexport default RecordList;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { connect } from 'react-redux';\n\nimport Statistics from './Statistics';\nimport RecordList from './RecordList';\n\nimport './AllRecords.css';\n\nclass AllRecords extends React.Component {\n\n    static propTypes = {\n        monthRecord: PropTypes.object,\n        recordLoading: PropTypes.bool,\n    };\n\n    render() {\n        const { monthRecord } = this.props;\n\n        return (\n            <PerfectScrollbar>\n                <div className='d-flex flex-column align-items-center left-col-content'>\n                    <Statistics\n                        income={monthRecord.income}\n                        expenses={monthRecord.expenses} />\n                    <RecordList dailyRecords={monthRecord.dailyRecords} />\n                </div>\n            </PerfectScrollbar>);\n    }\n}\n\nexport default connect(state => ({\n    monthRecord: state.record.monthRecord,\n    recordLoading: state.record.recordLoading,\n}))(AllRecords);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport {\n    ButtonDropdown,\n    DropdownToggle,\n    DropdownMenu,\n    DropdownItem,\n} from 'reactstrap'\n\nimport {\n    setTypeDropdownValue,\n    toggleTypeDropdown,\n    setMethodDropdownValue,\n    setCategoryDropdownValue,\n} from '../../../../../../states/record-modal/edit-record-actions';\n\nimport './TypeDropDown.css';\n\nclass TypeDropDown extends React.Component {\n\n    static propTypes = {\n        categoryLoading: PropTypes.bool,\n        expensesCategories: PropTypes.array,\n        incomeCategories: PropTypes.array,\n\n        paymentMethod: PropTypes.string,\n        open: PropTypes.bool,\n        value: PropTypes.string,\n    }\n\n    handleDropdownToggle = () => {\n        this.props.dispatch(toggleTypeDropdown())\n    }\n\n    handleDropdownSelect = (type) => {\n\n        const { expensesCategories, incomeCategories, dispatch, paymentMethod } = this.props;\n\n        dispatch(setTypeDropdownValue(type));\n\n        if (type === 'income' && paymentMethod === 'card')\n            dispatch(setMethodDropdownValue('cash'));\n\n        if (type === 'expenses')\n            dispatch(setCategoryDropdownValue(expensesCategories[0]));\n        else\n            dispatch(setCategoryDropdownValue(incomeCategories[0]))\n    }\n\n    render() {\n\n        const { open, value } = this.props;\n\n        return (\n            <ButtonDropdown id='type-dropdown' isOpen={open} toggle={this.handleDropdownToggle}>\n                <DropdownToggle caret outline>\n                    {value === 'expenses' ? 'Expenses' : 'Income'}\n                </DropdownToggle>\n                <DropdownMenu>\n                    <DropdownItem onClick={() => { this.handleDropdownSelect(\"expenses\") }}>\n                        Expenses\n                    </DropdownItem>\n                    <DropdownItem onClick={() => { this.handleDropdownSelect(\"income\") }}>\n                        Income\n                     </DropdownItem>\n                </DropdownMenu>\n            </ButtonDropdown>\n        );\n    }\n}\n\nexport default connect(state => ({\n    ...state.category,\n    open: state.editRecordForm.typeDropdown.open,\n    value: state.editRecordForm.typeDropdown.value,\n    paymentMethod: state.editRecordForm.paymentMethodDropdown.value,\n}))(TypeDropDown);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport {\n    ButtonDropdown,\n    DropdownToggle,\n    DropdownMenu,\n    DropdownItem,\n} from 'reactstrap'\n\nimport { setCategoryDropdownValue, toggleCategoryDropdown } from '../../../../../../states/record-modal/edit-record-actions';\n\nimport './CategoryDropDown.css';\n\nclass CategoryDropDown extends React.Component {\n\n    static propTypes = {\n        categoryLoading: PropTypes.bool,\n        expensesCategories: PropTypes.array,\n        incomeCategories: PropTypes.array,\n        type: PropTypes.string,\n        open: PropTypes.bool,\n        value: PropTypes.string,\n    };\n\n    handleDropdownToggle = () => {\n        this.props.dispatch(toggleCategoryDropdown())\n    }\n\n    handleDropdownSelect = (category) => {\n        this.props.dispatch(setCategoryDropdownValue(category));\n    }\n\n    render() {\n        const { expensesCategories, incomeCategories, type, open, value } = this.props;\n\n        const categoryList = type === 'expenses' ?\n            expensesCategories : incomeCategories;\n\n        const dropdown = categoryList.map((categoryItem, index) => {\n            return (\n                <DropdownItem key={index} onClick={() => { this.handleDropdownSelect(categoryItem) }}>\n                    {categoryItem}\n                </DropdownItem>)\n        })\n        return (\n            <ButtonDropdown id='category-dropdown' isOpen={open} toggle={this.handleDropdownToggle}>\n                <DropdownToggle caret outline>\n                    {value}\n                </DropdownToggle>\n                <DropdownMenu\n                    modifiers={{\n                        setMaxHeight: {\n                            enabled: true,\n                            fn: (data) => {\n                                return {\n                                    ...data,\n                                    styles: {\n                                        ...data.styles,\n                                        overflow: 'auto',\n                                        maxHeight: 200,\n                                    },\n                                };\n                            },\n                        },\n                    }}>\n                    {dropdown}\n                </DropdownMenu>\n            </ButtonDropdown>\n        );\n    }\n}\n\nexport default connect(state => ({\n    ...state.category,\n    type: state.editRecordForm.typeDropdown.value,\n    open: state.editRecordForm.categoryDropdown.open,\n    value: state.editRecordForm.categoryDropdown.value,\n}))(CategoryDropDown);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport {\n    ButtonDropdown,\n    DropdownToggle,\n    DropdownMenu,\n    DropdownItem,\n} from 'reactstrap'\n\nimport { setMethodDropdownValue, toggleMethodDropdown } from '../../../../../../states/record-modal/edit-record-actions';\n\nimport './MethodDropDown.css';\n\nclass MethodDropDown extends React.Component {\n\n    static propTypes = {\n        type: PropTypes.string,\n        open: PropTypes.bool,\n        value: PropTypes.string,\n    }\n\n    handleDropdownToggle = () => {\n        this.props.dispatch(toggleMethodDropdown())\n    }\n\n    handleDropdownSelect = (paymentMethod) => {\n        this.props.dispatch(setMethodDropdownValue(paymentMethod));\n    }\n\n    render() {\n\n        const { type, open, value } = this.props;\n\n        return (\n            <ButtonDropdown id='method-dropdown' isOpen={open} toggle={this.handleDropdownToggle}>\n                <DropdownToggle caret outline>\n                    {value === 'cash' ? 'Cash' : 'Card'}\n                </DropdownToggle>\n                <DropdownMenu>\n                    <DropdownItem onClick={() => { this.handleDropdownSelect(\"cash\") }}>\n                        Cash\n                    </DropdownItem>{type === 'expenses' ?\n                        <DropdownItem onClick={() => { this.handleDropdownSelect(\"card\") }}>\n                            Card\n                    </DropdownItem> : []}\n                </DropdownMenu>\n            </ButtonDropdown>\n        );\n    }\n}\n\nexport default connect(state => ({\n    type: state.editRecordForm.typeDropdown.value,\n    open: state.editRecordForm.paymentMethodDropdown.open,\n    value: state.editRecordForm.paymentMethodDropdown.value,\n}))(MethodDropDown);","import React, { forwardRef } from 'react';\nimport DatePicker from 'react-datepicker'\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\n\nimport { setDate } from '../../../../../../states/record-modal/edit-record-actions';\n\nimport './Datepicker.css';\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nclass Datepicker extends React.Component {\n\n    static propTypes = {\n        date: PropTypes.number,\n    }\n\n    handleDateChange = (e) => {\n        this.props.dispatch(setDate(e.getTime()));\n    }\n\n    render() {\n\n        const { date } = this.props;\n\n        const CustomInput = forwardRef((props, ref) => {\n            return (\n                <input\n                    id='datepicker-btn'\n                    onClick={props.onClick}\n                    value={props.value}\n                    type=\"text\"\n                    readOnly={true}\n                    ref={ref}\n                />\n            )\n        })\n\n        return (\n            <DatePicker\n                id='datepicker'\n                customInput={<CustomInput />}\n                selected={date}\n                onChange={this.handleDateChange}\n                dateFormat='yyyy/MM/dd'\n            />\n        )\n    }\n}\n\n\nexport default connect(state => ({\n    date: state.editRecordForm.date,\n}))(Datepicker);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport ListItem from '@material-ui/core/ListItem';\nimport { Input } from 'reactstrap';\nimport { Modal } from 'react-bootstrap';\nimport { connect } from 'react-redux';\n\nimport TypeDropDown from './modalItems/TypeDropDown';\nimport CategoryDropDown from './modalItems/CategoryDropDown';\nimport MethodDropDown from './modalItems/MethodDropDown';\nimport Datepicker from './modalItems/Datepicker';\n\nimport {\n    remarksInput,\n    amountInput,\n    amountInputDanger,\n    toggleModal,\n    setEditRecordForm,\n    editRecord,\n} from '../../../../../states/record-modal/edit-record-actions';\n\nimport './EditRecordModal.css';\n\nconst styles = {\n    detail_item: {\n        margin: \"0.5rem 0\",\n    },\n    edit_btn: {\n        justifyContent: \"center\",\n        padding: \"1.2rem 0\",\n    }\n};\n\nclass EditRecordModal extends React.Component {\n\n    static propTypes = {\n        id: PropTypes.string,\n        type: PropTypes.string,\n        date: PropTypes.number,\n        paymentMethod: PropTypes.string,\n        category: PropTypes.string,\n        amount: PropTypes.number,\n        remarks: PropTypes.string,\n\n        amountInputDanger: PropTypes.bool,\n        show: PropTypes.bool,\n    }\n\n    constructor(props) {\n        super(props);\n        this.amountInputEl = null;\n        this.remarksInputEl = null;\n    };\n\n    handleFormSubmit = () => {\n        const { id, type, date, paymentMethod, category, amount, remarks, recordDetail, dispatch } = this.props;\n\n        if (!amount || amount < 0) {\n            dispatch(amountInputDanger(true));\n            return;\n        }\n\n        const modifiedRecord = {\n            id: id,\n            type: type,\n            date: date,\n            paymentMethod: paymentMethod,\n            category: category,\n            amount: amount,\n            remarks: remarks,\n        }\n\n        dispatch(editRecord(modifiedRecord));\n        this.handleClose();\n    }\n\n\n    handleAmountChange = (e) => {\n        const amount = e.target.value;\n        this.props.dispatch(amountInput(Number(amount)));\n        if (amount && this.props.amountInputDanger) {\n            this.props.dispatch(amountInputDanger(false));\n        }\n    }\n\n    handleRemarksChange = (e) => {\n        const remarks = e.target.value;\n        this.props.dispatch(remarksInput(remarks));\n    }\n\n    handleClose = () => {\n\n        const { dispatch, recordDetail } = this.props;\n\n        dispatch(toggleModal());\n        dispatch(setEditRecordForm(recordDetail));\n    }\n\n    render() {\n\n        const { classes, amount, remarks, show } = this.props;\n\n        return (\n            <Modal show={show} onHide={this.handleClose}>\n                <Modal.Body>\n                    <ListItem className={classes.detail_item}>\n                        <div className='modal-item-title'>Type</div>\n                        <div className='modal-item-body'>\n                            <TypeDropDown />\n                        </div>\n                    </ListItem>\n                    <ListItem className={classes.detail_item}>\n                        <div className='modal-item-title'>Method</div>\n                        <div className='modal-item-body'>\n                            <MethodDropDown />\n                        </div>\n                    </ListItem>\n                    <ListItem className={classes.detail_item}>\n                        <div className='modal-item-title'>Category</div>\n                        <div className='modal-item-body'>\n                            <CategoryDropDown />\n                        </div>\n                    </ListItem>\n                    <ListItem className={classes.detail_item}>\n                        <div className='modal-item-title'>Amount</div>\n                        <div className='modal-item-body'>\n                            <Input\n                                innerRef={el => { this.amountInputEl = el }}\n                                value={amount}\n                                onChange={this.handleAmountChange}\n                            />\n                        </div>\n                    </ListItem>\n                    <ListItem className={classes.detail_item}>\n                        <div className='modal-item-title'>Date</div>\n                        <div className='modal-item-body'><Datepicker /></div>\n                    </ListItem>\n                    <ListItem className={classes.detail_item}>\n                        <div className='modal-item-title'>Remarks</div>\n                        <div className='modal-item-body'>\n                            <Input\n                                type='textarea'\n                                innerRef={el => { this.remarksInputEl = el }}\n                                value={remarks}\n                                onChange={this.handleRemarksChange}\n                            />\n                        </div>\n                    </ListItem>\n                </Modal.Body>\n                <Modal.Footer className='p-0'>\n                    <ListItem button={true} className={classes.edit_btn} onClick={this.handleFormSubmit}>\n                        Edit Record\n                    </ListItem>\n                </Modal.Footer>\n            </Modal>\n        );\n    }\n}\n\nexport default connect(state => ({\n    recordDetail: state.recordDetail,\n    ...state.editRecordForm,\n    type: state.editRecordForm.typeDropdown.value,\n    paymentMethod: state.editRecordForm.paymentMethodDropdown.value,\n    category: state.editRecordForm.categoryDropdown.value,\n    amount: state.editRecordForm.amount.value,\n    amountInputDanger: state.editRecordForm.amount.danger,\n}))(withStyles(styles)(EditRecordModal));","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport dateFormat from 'dateformat';\nimport { connect } from 'react-redux';\nimport { Tooltip } from 'reactstrap';\n\nimport EditRecordModal from './modal/EditRecordModal';\n\nimport { toggleModal } from '../../../../states/record-modal/edit-record-actions';\nimport { deleteRecord } from '../../../../states/record-actions';\n\nimport './RecordDetail.css'\n\nconst styles = {\n    record_detail: {\n        width: \"100%\",\n        border: \"1px solid rgba(0, 0, 0, 0.1)\",\n        borderRadius: \"0.25rem\",\n        backgroundColor: \"rgb(255, 255, 255)\",\n        boxShadow: \"0 0.25rem 0.75rem rgba(0, 0, 0, 0.1)\",\n        marginBottom: \"2rem\",\n        paddingBottom: \"0\",\n    },\n    detail_item: {\n        margin: \"0.5rem 0\",\n    }\n};\n\nclass RecordDetail extends React.Component {\n\n    static propTypes = {\n        recordDetail: PropTypes.object,\n        recordSelected: PropTypes.bool,\n    }\n\n    state = {\n        editTooltipOpen: false,\n        deleteTooltipOpen: false,\n    };\n\n    editToggle = () => {\n        this.setState({\n            editTooltipOpen: !this.state.editTooltipOpen\n        });\n    }\n\n    deleteToggle = () => {\n        this.setState({\n            deleteTooltipOpen: !this.state.deleteTooltipOpen\n        });\n    }\n\n    toggleModal = () => {\n        this.props.dispatch(toggleModal());\n    }\n\n    deleteRecord = () => {\n        const { dispatch, recordDetail } = this.props;\n        const { id } = recordDetail;\n\n        dispatch(deleteRecord(id));\n    }\n\n    render() {\n        const { classes, recordDetail, recordSelected } = this.props;\n\n        return (\n            <div className='d-flex flex-column justify-content-center record-detail'>\n                <div className='header mb-3 ml-3 d-flex justify-content-between'>\n                    <h3>Detail</h3>\n                    <div id='record-detail-icons' className='d-flex'>\n                        <i id='edit-record-btn' className=\"fas fa-edit mr-3\" onClick={recordSelected ? this.toggleModal : null}></i>\n                        <Tooltip placement=\"bottom\" isOpen={this.state.editTooltipOpen} target=\"edit-record-btn\" toggle={this.editToggle}>\n                            edit\n                        </Tooltip>\n                        <EditRecordModal />\n                        <i id='delete-record-btn' className=\"fas fa-trash-alt mr-3\" onClick={recordSelected ? this.deleteRecord : null}></i>\n                        <Tooltip placement=\"bottom\" isOpen={this.state.deleteTooltipOpen} target=\"delete-record-btn\" toggle={this.deleteToggle}>\n                            delete\n                        </Tooltip>\n                    </div>\n                </div>\n                {recordSelected ?\n                    <List component=\"nav\" className={classes.record_detail}>\n                        <ListItem className={classes.detail_item}>\n                            <div className='detail-item-title'>Category</div>\n                            <div className='ml-5 category'>{recordDetail.category}</div>\n                        </ListItem>\n                        <Divider />\n                        <ListItem className={classes.detail_item}>\n                            <div className='detail-item-title'>Type</div>\n                            <div className='ml-5'>{recordDetail.type}</div>\n                        </ListItem>\n                        <ListItem className={classes.detail_item}>\n                            <div className='detail-item-title'>Method</div>\n                            <div className='ml-5'>{recordDetail.paymentMethod}</div>\n                        </ListItem>\n                        <ListItem className={classes.detail_item}>\n                            <div className='detail-item-title'>Amount</div>\n                            <div className='ml-5'>{recordDetail.amount}</div>\n                        </ListItem>\n                        <ListItem className={classes.detail_item}>\n                            <div className='detail-item-title'>Date</div>\n                            <div className='ml-5'>{dateFormat(recordDetail.date, 'mm/dd\\xa0\\xa0ddd')}</div>\n                        </ListItem>\n                        <ListItem className={classes.detail_item}>\n                            <div className='detail-item-title'>Remarks</div>\n                            <div className='ml-5'>{recordDetail.remarks}</div>\n                        </ListItem>\n                    </List> :\n                    <div className='ml-3 mt-3'>No record selected</div>}\n            </div>\n        );\n    }\n}\n\nexport default connect(state => ({\n    recordDetail: state.recordDetail,\n    recordSelected: state.recordSelected,\n}))(withStyles(styles)(RecordDetail));","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Chart } from \"react-google-charts\";\n\nimport './StatisticsChart.css';\n\nclass StatisticsChart extends React.Component {\n\n    static propTypes = {\n        chartValue: PropTypes.object,\n    };\n\n    render() {\n        const { chartValue } = this.props;\n\n        const chartValueInArray = Object.keys(chartValue).map((key) => {\n            return [key, chartValue[key]];\n        });\n\n        chartValueInArray.unshift(['Category', 'Amount']);\n\n        return (\n            <Chart\n                width={'100%'}\n                height={'100%'}\n                chartType=\"PieChart\"\n                loader={\n                    <div className='d-flex justify-content-center align-items-center chart-loading-container'>\n                        <i className=\"fas fa-spinner fa-spin chart-loading\"></i>\n                    </div>}\n                data={chartValueInArray}\n                options={{\n                    legend: {\n                        position: \"labeled\",\n                        alignment: \"center\",\n                        textStyle: {\n                            color: \"233238\",\n                            fontSize: 14,\n                        }\n                    },\n                    pieSliceText: \"value\",\n                }}\n            />\n        )\n    }\n}\n\nexport default connect(state => ({\n    chartValue: state.chart.chartValue,\n}))(StatisticsChart);","import axios from 'axios';\n\nconst categoryBaseUrl = 'http://localhost:8080/api/category';\n\nexport const getCategories = (type) => {\n    let url = `${categoryBaseUrl}?type=${type}`;\n\n    console.log(`Making GET request to: ${url}`);\n\n    return axios.get(url).then((res) => {\n        if (res.status !== 200)\n            throw new Error(`Unexpected response code: ${res.status}`);\n\n        return res.data;\n    });\n}\n\nexport const createCategory = (type, name) => {\n\n    let url = `${categoryBaseUrl}?type=${type}&name=${name}`;\n\n    console.log(`Making POST request to: ${url}`);\n\n    return axios.post(url, { type, name }).then((res) => {\n        if (res.status !== 200)\n            throw new Error(`Unexpected response code: ${res.status}`);\n\n        return res.data;\n    });\n}\n\nexport const deleteCategory = (type, name) => {\n\n    let url = `${categoryBaseUrl}?type=${type}&name=${name}`;\n\n    console.log(`Making DELETE request to: ${url}`);\n\n    return axios.delete(url).then((res) => {\n        if (res.status !== 200)\n            throw new Error(`Unexpected response code: ${res.status}`);\n\n        return res.data;\n    });\n}","import {\n    getCategories as getCategoriesFromApi,\n    createCategory as createCategoryFromApi,\n    deleteCategory as deleteCategoryFromApi,\n} from '../api/category'\n\n\n/* Category */\n\nconst startLoading = () => {\n    return {\n        type: '@CATEGORY/START_LOADING'\n    };\n}\n\nconst endLoading = () => {\n    return {\n        type: '@CATEGORY/END_LOADING'\n    };\n}\n\nconst endListExpensesCategories = (expensesCategories) => {\n    return {\n        type: '@CATEGORY/END_LIST_EXPENSES_CATEGORIES',\n        expensesCategories\n    };\n}\n\nconst endListIncomeCategories = (incomeCategories) => {\n    return {\n        type: '@CATEGORY/END_LIST_INCOME_CATEGORIES',\n        incomeCategories\n    };\n}\n\nexport const getCategory = (loading = false) => {\n    return (dispatch) => {\n        if (!loading)\n            dispatch(startLoading());\n\n        const getExpensesCategories = getCategoriesFromApi('expenses').then(data => {\n            dispatch(endListExpensesCategories(data.categories));\n        });\n\n        const getIncomeCategories = getCategoriesFromApi('income').then(data => {\n            dispatch(endListIncomeCategories(data.categories));\n        });\n\n        return Promise.all([getExpensesCategories, getIncomeCategories]).then(() => {\n            dispatch(endLoading());\n        });\n    }\n}\n\nexport const deleteCategory = (type, name) => {\n    return (dispatch) => {\n        return deleteCategoryFromApi(type, name).then(() => {\n            dispatch(getCategory());\n        });\n    }\n}\n\n\n/* NewCategoryForm */\n\nexport const toggleModal = () => {\n    return {\n        type: '@NEW_CATEGORY_FORM/TOGGLE_MODAL',\n    }\n}\n\nexport const resetForm = () => {\n    return {\n        type: '@NEW_CATEGORY_FORM/RESET_FORM',\n    }\n}\n\nexport const toggleTypeDropdown = () => {\n    return {\n        type: '@NEW_CATEGORY_FORM/TOGGLE_TYPE_DROPDOWN',\n    }\n}\n\nexport const setTypeDropdownValue = (type) => {\n    const categoryType = type;\n\n    return {\n        type: '@NEW_CATEGORY_FORM/SET_TYPE_DROPDOWN_VALUE',\n        categoryType,\n    }\n}\n\nexport const nameInput = (name) => {\n    return {\n        type: '@NEW_CATEGORY_FORM/NAME_INPUT',\n        name,\n    }\n}\n\nexport const nameInputDanger = (danger) => {\n    return {\n        type: '@NEW_CATEGORY_FORM/NAME_INPUT_DANGER',\n        danger,\n    }\n}\n\nexport const createCategory = (type, name) => {\n    return (dispatch) => {\n        return createCategoryFromApi(type, name).then(() => {\n            dispatch(getCategory());\n        });\n    }\n}","import React from 'react';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { connect } from 'react-redux';\nimport { withStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\n\nimport { deleteCategory } from '../../../states/category-actions';\n\nimport './Categories.css'\n\nconst styles = {\n    category_list: {\n        width: \"100%\",\n        border: \"1px solid rgba(0, 0, 0, 0.1)\",\n        borderRadius: \"0.25rem\",\n        backgroundColor: \"rgb(255, 255, 255)\",\n        boxShadow: \"0 0.25rem 0.75rem rgba(0, 0, 0, 0.1)\",\n        paddingBottom: \"0\",\n        paddingTop: \"0\",\n    },\n    category_item: {\n        padding: \"1rem\",\n        '& i': {\n            opacity: '0.3',\n            marginRight: \"1rem\",\n        },\n        '&:hover': {\n            cursor: 'auto',\n            '& i:hover': {\n                cursor: 'pointer',\n                opacity: '0.6',\n            }\n        }\n    }\n};\n\nclass Categories extends React.Component {\n\n    deleteCategory = (type, categoryItem) => {\n        this.props.dispatch(deleteCategory(type, categoryItem));\n    }\n\n    render() {\n        const { classes, type, list } = this.props;\n\n        const categoryList = list.map((categoryItem, index) => {\n\n            let isLastItem = false;\n\n            if ((index + 1) === list.length)\n                isLastItem = true;\n\n            return (\n                <React.Fragment key={index}>\n                    <ListItem className={classes.category_item} button={true}>\n                        <div className='ml-5'>{categoryItem}</div>\n                        <i className=\"fas fa-trash-alt ml-auto\" onClick={() => this.deleteCategory(type, categoryItem)}></i>\n                    </ListItem>\n                    {isLastItem ? <div /> : <Divider />}\n                </React.Fragment>\n            )\n        })\n\n        return (\n            <PerfectScrollbar>\n                <div className='d-flex flex-column justify-content-center category-list'>\n                    <div className='header mb-3 ml-3'>\n                        <h3>{type.charAt(0).toUpperCase() + type.slice(1)}</h3>\n                    </div>\n                    <List component=\"nav\" className={classes.category_list}>\n                        {categoryList}\n                    </List>\n                </div>\n            </PerfectScrollbar>\n        );\n    }\n}\n\nexport default connect()(withStyles(styles)(Categories));","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport { connect } from 'react-redux';\n\nimport AllRecords from '../components/record/main/left/AllRecords';\nimport RecordDetail from '../components/record/main/right/RecordDetail';\nimport StatisticsChart from '../components/chart/main/StatisticsChart';\nimport Categories from '../components/category/main/Categories';\n\nimport { getCategory } from '../states/category-actions';\nimport { getMonthRecord } from '../states/record-actions';\nimport { getChart } from '../states/chart-actions';\n\nimport './Main.css';\nimport 'react-perfect-scrollbar/dist/css/styles.css';\n\nclass Main extends React.Component {\n\n    static propTypes = {\n        categoryLoading: PropTypes.bool,\n        expensesCategories: PropTypes.array,\n        incomeCategories: PropTypes.array,\n\n        month: PropTypes.number,\n        year: PropTypes.number,\n\n        chartType: PropTypes.string,\n    };\n\n    componentDidMount() {\n        const { dispatch, year, month, chartType } = this.props;\n\n        dispatch(getCategory());\n        dispatch(getMonthRecord(year, month));\n        dispatch(getChart(year, month, chartType));\n    }\n\n    render() {\n\n        const { expensesCategories, incomeCategories } = this.props;\n\n        return (\n            <div className='d-flex flex-row justify-content-center main'>\n                <Switch>\n                    <Route\n                        path=\"/record\"\n                        render={props =>\n                            <React.Fragment>\n                                <div className='column left-col'>\n                                    <AllRecords />\n                                </div>\n                                <div className='column right-col'>\n                                    <RecordDetail />\n                                </div>\n                            </React.Fragment>\n                        }\n                    />\n                    <Route\n                        path=\"/chart\"\n                        render={props =>\n                            <div className=\"d-flex ustify-content-center chart-container\">\n                                <StatisticsChart />\n                            </div>}\n                    />\n                    <Route\n                        path=\"/category\"\n                        render={props =>\n                            <React.Fragment>\n                                <div className='column left-col'>\n                                    <Categories\n                                        type={\"expenses\"}\n                                        list={expensesCategories} />\n                                </div>\n                                <div className='column right-col'>\n                                    <Categories\n                                        type={\"income\"}\n                                        list={incomeCategories} />\n                                </div>\n                            </React.Fragment>\n                        }\n                    />\n                    <Redirect from=\"/\" to=\"/record\" />\n                </Switch>\n            </div>\n        );\n    }\n}\n\nexport default connect(state => ({\n    ...state.category,\n    month: state.month,\n    year: state.year,\n    chartType: state.chart.typeDropdown.value,\n}))(Main);","import { createRecord as createRecordFromApi } from '../../api/record';\n\nimport { getMonthRecord } from '../record-actions';\n\nimport { getChart } from '../chart-actions';\n\n/* NewRecordForm */\n\nexport const setNewRecordForm = (recordItem) => {\n    const { category, type, paymentMethod, amount, date, remarks } = recordItem;\n    const recordType = type;\n\n    return {\n        type: '@NEW_RECORD_FORM/SET_NEW_RECORD_FORM',\n        category,\n        recordType,\n        paymentMethod,\n        amount,\n        date,\n        remarks\n    };\n}\n\nexport const toggleTypeDropdown = () => {\n    return {\n        type: '@NEW_RECORD_FORM/TOGGLE_TYPE_DROPDOWN',\n    }\n}\n\nexport const setTypeDropdownValue = (type) => {\n    const recordType = type;\n\n    return {\n        type: '@NEW_RECORD_FORM/SET_TYPE_DROPDOWN_VALUE',\n        recordType\n    }\n}\n\n\nexport const toggleMethodDropdown = () => {\n    return {\n        type: '@NEW_RECORD_FORM/TOGGLE_METHOD_DROPDOWN',\n    }\n}\n\nexport const setMethodDropdownValue = (paymentMethod) => {\n    return {\n        type: '@NEW_RECORD_FORM/SET_METHOD_DROPDOWN_VALUE',\n        paymentMethod\n    }\n}\n\nexport const toggleCategoryDropdown = () => {\n    return {\n        type: '@NEW_RECORD_FORM/TOGGLE_CATEGORY_DROPDOWN',\n    }\n}\n\nexport const setCategoryDropdownValue = (category) => {\n    return {\n        type: '@NEW_RECORD_FORM/SET_CATEGORY_DROPDOWN_VALUE',\n        category\n    }\n}\n\nexport const setDate = (date) => {\n    return {\n        type: '@NEW_RECORD_FORM/SET_DATE',\n        date\n    }\n}\n\nexport const remarksInput = (remarks) => {\n    return {\n        type: '@NEW_RECORD_FORM/REMARKS_INPUT',\n        remarks\n    }\n}\n\nexport const amountInput = (amount) => {\n    return {\n        type: '@NEW_RECORD_FORM/AMOUNT_INPUT',\n        amount\n    }\n}\n\nexport const amountInputDanger = (danger) => {\n    return {\n        type: '@NEW_RECORD_FORM/AMOUNT_INPUT_DANDER',\n        danger\n    }\n}\n\nexport const toggleModal = () => {\n    return {\n        type: '@NEW_RECORD_FORM/TOGGLE_MODAL',\n    }\n}\n\nexport const resetForm = () => {\n    return {\n        type: '@NEW_RECORD_FORM/RESET_FORM',\n    }\n}\n\nexport const createRecord = (newRocord) => {\n    return (dispatch, getState) => {\n        return createRecordFromApi(newRocord).then(() => {\n            const year = getState().year;\n            const month = getState().month;\n            const type = getState().chart.typeDropdown.value;\n\n            dispatch(getMonthRecord(year, month));\n            dispatch(getChart(year, month, type));\n        });\n    }\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport {\n    ButtonDropdown,\n    DropdownToggle,\n    DropdownMenu,\n    DropdownItem,\n} from 'reactstrap'\n\nimport {\n    setTypeDropdownValue,\n    toggleTypeDropdown,\n    setMethodDropdownValue,\n    setCategoryDropdownValue,\n} from '../../../../../states/record-modal/new-record-actions';\n\nimport './TypeDropDown.css';\n\nclass TypeDropDown extends React.Component {\n\n    static propTypes = {\n        categoryLoading: PropTypes.bool,\n        expensesCategories: PropTypes.array,\n        incomeCategories: PropTypes.array,\n\n        paymentMethod: PropTypes.string,\n        open: PropTypes.bool,\n        value: PropTypes.string,\n    }\n\n    handleDropdownToggle = () => {\n        this.props.dispatch(toggleTypeDropdown())\n    }\n\n    handleDropdownSelect = (type) => {\n\n        const { expensesCategories, incomeCategories, dispatch, paymentMethod } = this.props;\n\n        dispatch(setTypeDropdownValue(type));\n\n        if (type === 'income' && paymentMethod === 'card')\n            dispatch(setMethodDropdownValue('cash'));\n\n        if (type === 'expenses')\n            dispatch(setCategoryDropdownValue(expensesCategories[0]));\n        else\n            dispatch(setCategoryDropdownValue(incomeCategories[0]))\n    }\n\n\n    render() {\n\n        const { open, value } = this.props;\n\n        return (\n            <ButtonDropdown id='type-dropdown' isOpen={open} toggle={this.handleDropdownToggle}>\n                <DropdownToggle caret outline>\n                    {value === 'expenses' ? 'Expenses' : 'Income'}\n                </DropdownToggle>\n                <DropdownMenu>\n                    <DropdownItem onClick={() => { this.handleDropdownSelect(\"expenses\") }}>\n                        Expenses\n                    </DropdownItem>\n                    <DropdownItem onClick={() => { this.handleDropdownSelect(\"income\") }}>\n                        Income\n                     </DropdownItem>\n                </DropdownMenu>\n            </ButtonDropdown>\n        );\n    }\n}\n\nexport default connect(state => ({\n    ...state.category,\n    open: state.newRecordForm.typeDropdown.open,\n    value: state.newRecordForm.typeDropdown.value,\n    paymentMethod: state.newRecordForm.paymentMethodDropdown.value,\n}))(TypeDropDown);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport {\n    ButtonDropdown,\n    DropdownToggle,\n    DropdownMenu,\n    DropdownItem,\n} from 'reactstrap'\n\nimport { setCategoryDropdownValue, toggleCategoryDropdown } from '../../../../../states/record-modal/new-record-actions';\n\nimport './CategoryDropDown.css';\n\nclass CategoryDropDown extends React.Component {\n\n    static propTypes = {\n        categoryLoading: PropTypes.bool,\n        expensesCategories: PropTypes.array,\n        incomeCategories: PropTypes.array,\n        type: PropTypes.string,\n        open: PropTypes.bool,\n        value: PropTypes.string,\n    };\n\n    handleDropdownToggle = () => {\n        this.props.dispatch(toggleCategoryDropdown())\n    }\n\n    handleDropdownSelect = (category) => {\n        this.props.dispatch(setCategoryDropdownValue(category));\n    }\n\n    render() {\n        const { expensesCategories, incomeCategories, type, open, value } = this.props;\n\n        const categoryList = type === 'expenses' ?\n            expensesCategories : incomeCategories;\n\n        const dropdown = categoryList.map((categoryItem, index) => {\n            return (\n                <DropdownItem key={index} onClick={() => { this.handleDropdownSelect(categoryItem) }}>\n                    {categoryItem}\n                </DropdownItem>)\n        })\n        return (\n            <ButtonDropdown id='category-dropdown' isOpen={open} toggle={this.handleDropdownToggle}>\n                <DropdownToggle caret outline>\n                    {value}\n                </DropdownToggle>\n                <DropdownMenu\n                    modifiers={{\n                        setMaxHeight: {\n                            enabled: true,\n                            fn: (data) => {\n                                return {\n                                    ...data,\n                                    styles: {\n                                        ...data.styles,\n                                        overflow: 'auto',\n                                        maxHeight: 200,\n                                    },\n                                };\n                            },\n                        },\n                    }}>\n                    {dropdown}\n                </DropdownMenu>\n            </ButtonDropdown>\n        );\n    }\n}\n\nexport default connect(state => ({\n    ...state.category,\n    type: state.newRecordForm.typeDropdown.value,\n    open: state.newRecordForm.categoryDropdown.open,\n    value: state.newRecordForm.categoryDropdown.value,\n}))(CategoryDropDown);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport {\n    ButtonDropdown,\n    DropdownToggle,\n    DropdownMenu,\n    DropdownItem,\n} from 'reactstrap'\n\nimport { setMethodDropdownValue, toggleMethodDropdown } from '../../../../../states/record-modal/new-record-actions';\n\nimport './MethodDropDown.css';\n\nclass MethodDropDown extends React.Component {\n\n    static propTypes = {\n        type: PropTypes.string,\n        open: PropTypes.bool,\n        value: PropTypes.string,\n    }\n\n    handleDropdownToggle = () => {\n        this.props.dispatch(toggleMethodDropdown())\n    }\n\n    handleDropdownSelect = (paymentMethod) => {\n        this.props.dispatch(setMethodDropdownValue(paymentMethod));\n    }\n\n    render() {\n\n        const { type, open, value } = this.props;\n\n        return (\n            <ButtonDropdown id='method-dropdown' isOpen={open} toggle={this.handleDropdownToggle}>\n                <DropdownToggle caret outline>\n                    {value === 'cash' ? 'Cash' : 'Card'}\n                </DropdownToggle>\n                <DropdownMenu>\n                    <DropdownItem onClick={() => { this.handleDropdownSelect(\"cash\") }}>\n                        Cash\n                    </DropdownItem>{type === 'expenses' ?\n                        <DropdownItem onClick={() => { this.handleDropdownSelect(\"card\") }}>\n                            Card\n                    </DropdownItem> : []}\n                </DropdownMenu>\n            </ButtonDropdown>\n        );\n    }\n}\n\nexport default connect(state => ({\n    type: state.newRecordForm.typeDropdown.value,\n    open: state.newRecordForm.paymentMethodDropdown.open,\n    value: state.newRecordForm.paymentMethodDropdown.value,\n}))(MethodDropDown);","import React, { forwardRef } from 'react';\nimport DatePicker from 'react-datepicker'\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\n\nimport { setDate } from '../../../../../states/record-modal/new-record-actions';\n\nimport './Datepicker.css';\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nclass Datepicker extends React.Component {\n\n    static propTypes = {\n        date: PropTypes.number,\n    }\n\n    handleDateChange = (e) => {\n        this.props.dispatch(setDate(e.getTime()));\n    }\n\n    render() {\n\n        const { date } = this.props;\n\n        const CustomInput = forwardRef((props, ref) => {\n            return (\n                <input\n                    id='datepicker-btn'\n                    onClick={props.onClick}\n                    value={props.value}\n                    type=\"text\"\n                    readOnly={true}\n                    ref={ref}\n                />\n            )\n        })\n\n        return (\n            <DatePicker\n                id='datepicker'\n                customInput={<CustomInput />}\n                selected={date}\n                onChange={this.handleDateChange}\n                dateFormat='yyyy/MM/dd'\n            />\n        )\n    }\n}\n\n\nexport default connect(state => ({\n    date: state.newRecordForm.date,\n}))(Datepicker);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport ListItem from '@material-ui/core/ListItem';\nimport { Input } from 'reactstrap';\nimport { Modal } from 'react-bootstrap';\nimport { connect } from 'react-redux';\n\nimport TypeDropDown from './modalItems/TypeDropDown';\nimport CategoryDropDown from './modalItems/CategoryDropDown';\nimport MethodDropDown from './modalItems/MethodDropDown';\nimport Datepicker from './modalItems/Datepicker';\n\nimport {\n    remarksInput,\n    amountInput,\n    amountInputDanger,\n    toggleModal,\n    resetForm,\n    createRecord,\n} from '../../../../states/record-modal/new-record-actions';\n\nimport './NewRecordModal.css';\n\nconst styles = {\n    detail_item: {\n        margin: \"0.5rem 0\",\n    },\n    add_btn: {\n        justifyContent: \"center\",\n        padding: \"1.2rem 0\",\n    }\n};\n\nclass NewRecordModal extends React.Component {\n\n    static propTypes = {\n        type: PropTypes.string,\n        date: PropTypes.number,\n        paymentMethod: PropTypes.string,\n        category: PropTypes.string,\n        amount: PropTypes.number,\n        remarks: PropTypes.string,\n\n        amountInputDanger: PropTypes.bool,\n        show: PropTypes.bool,\n    }\n\n    constructor(props) {\n        super(props);\n        this.amountInputEl = null;\n        this.remarksInputEl = null;\n    };\n\n    handleFormSubmit = () => {\n        const { type, date, paymentMethod, category, amount, remarks, dispatch } = this.props;\n\n        if (!amount || amount < 0) {\n            dispatch(amountInputDanger(true));\n            return;\n        }\n\n        const newRecord = {\n            type: type,\n            date: date,\n            paymentMethod: paymentMethod,\n            category: category,\n            amount: amount,\n            remarks: remarks,\n        }\n\n        dispatch(createRecord(newRecord));\n        this.handleClose();\n    }\n\n\n    handleAmountChange = (e) => {\n        const amount = e.target.value;\n        this.props.dispatch(amountInput(Number(amount)));\n        if (amount && this.props.amountInputDanger) {\n            this.props.dispatch(amountInputDanger(false));\n        }\n    }\n\n    handleRemarksChange = (e) => {\n        const remarks = e.target.value;\n        this.props.dispatch(remarksInput(remarks));\n    }\n\n    handleClose = () => {\n        const { dispatch } = this.props;\n\n        dispatch(toggleModal());\n        dispatch(resetForm());\n    }\n\n    render() {\n\n        const { classes, amount, remarks, show } = this.props;\n\n        return (\n            <Modal show={show} onHide={this.handleClose}>\n                <Modal.Body>\n                    <ListItem className={classes.detail_item}>\n                        <div className='modal-item-title'>Type</div>\n                        <div className='modal-item-body'>\n                            <TypeDropDown />\n                        </div>\n                    </ListItem>\n                    <ListItem className={classes.detail_item}>\n                        <div className='modal-item-title'>Method</div>\n                        <div className='modal-item-body'>\n                            <MethodDropDown />\n                        </div>\n                    </ListItem>\n                    <ListItem className={classes.detail_item}>\n                        <div className='modal-item-title'>Category</div>\n                        <div className='modal-item-body'>\n                            <CategoryDropDown />\n                        </div>\n                    </ListItem>\n                    <ListItem className={classes.detail_item}>\n                        <div className='modal-item-title'>Amount</div>\n                        <div className='modal-item-body'>\n                            <Input\n                                innerRef={el => { this.amountInputEl = el }}\n                                value={amount === null ? '' : amount}\n                                onChange={this.handleAmountChange}\n                            />\n                        </div>\n                    </ListItem>\n                    <ListItem className={classes.detail_item}>\n                        <div className='modal-item-title'>Date</div>\n                        <div className='modal-item-body'><Datepicker /></div>\n                    </ListItem>\n                    <ListItem className={classes.detail_item}>\n                        <div className='modal-item-title'>Remarks</div>\n                        <div className='modal-item-body'>\n                            <Input\n                                type='textarea'\n                                innerRef={el => { this.remarksInputEl = el }}\n                                value={remarks}\n                                onChange={this.handleRemarksChange}\n                            />\n                        </div>\n                    </ListItem>\n                </Modal.Body>\n                <Modal.Footer className='p-0'>\n                    <ListItem button={true} className={classes.add_btn} onClick={this.handleFormSubmit}>\n                        Add Record\n                    </ListItem>\n                </Modal.Footer>\n            </Modal>\n        );\n    }\n}\n\nexport default connect(state => ({\n    ...state.newRecordForm,\n    type: state.newRecordForm.typeDropdown.value,\n    paymentMethod: state.newRecordForm.paymentMethodDropdown.value,\n    category: state.newRecordForm.categoryDropdown.value,\n    amount: state.newRecordForm.amount.value,\n    amountInputDanger: state.newRecordForm.amount.danger,\n}))(withStyles(styles)(NewRecordModal));","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport NewRecordModal from './modal/NewRecordModal';\n\nimport { toggleModal } from '../../../states/record-modal/new-record-actions';\n\nimport './NewRecordBtn.css';\n\nclass NewRecordBtn extends React.Component {\n\n\n    toggleModal = () => {\n        this.props.dispatch(toggleModal());\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <button type=\"button\" id='add-record-btn' className=\"btn btn-primary\" onClick={this.toggleModal}>\n                    + New\n                </button>\n                <NewRecordModal />\n            </React.Fragment>\n        );\n    }\n}\n\nexport default connect()(NewRecordBtn);","import React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nimport DatePicker from 'react-datepicker'\nimport { connect } from 'react-redux';\n\nimport { setMonth, setYear, getMonthRecord, resetRecordSelected } from '../../../states/record-actions';\nimport { getChart } from '../../../states/chart-actions';\n\nimport './Monthpicker.css';\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nclass Monthpicker extends React.Component {\n\n    static propTypes = {\n        year: PropTypes.number,\n        month: PropTypes.number,\n        chartType: PropTypes.string,\n    }\n\n    handleMonthChange = async (e) => {\n        const year = e.getFullYear();\n        const month = e.getMonth() + 1;\n\n        this.props.dispatch(setMonth(month));\n        this.props.dispatch(setYear(year));\n        this.props.dispatch(getChart(year, month, this.props.chartType));\n        await this.props.dispatch(getMonthRecord(year, month));\n        this.props.dispatch(resetRecordSelected());\n    }\n\n    render() {\n        const { month, year } = this.props;\n\n        const monthPickerValue = new Date(year, month - 1);\n\n        const CustomInput = forwardRef((props, ref) => {\n            return (\n                <button\n                    type=\"button\"\n                    className=\"btn btn-outline-dark dropdown-toggle\"\n                    onClick={props.onClick}\n                    readOnly={true}\n                    ref={ref}\n                >{props.value}</button>\n            )\n        })\n\n        return (\n            <div id='month-picker-container'>\n                <DatePicker\n                    id='monthpicker'\n                    customInput={<CustomInput />}\n                    selected={monthPickerValue}\n                    onChange={this.handleMonthChange}\n                    dateFormat=\"yyyy/MM\"\n                    showMonthYearPicker\n                    popperModifiers={{\n                        offset: {\n                            enabled: true,\n                            offset: '-60rem 2rem'\n                        },\n                    }}\n                />\n            </div>\n        )\n    }\n}\n\n\nexport default connect(state => ({\n    month: state.month,\n    year: state.year,\n    chartType: state.chart.typeDropdown.value,\n}))(Monthpicker);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport {\n    ButtonDropdown,\n    DropdownToggle,\n    DropdownMenu,\n    DropdownItem,\n} from 'reactstrap'\n\nimport './TypeDropDown.css';\nimport { setTypeDropdownValue, toggleTypeDropdown } from '../../../states/category-actions';\n\nclass TypeDropDown extends React.Component {\n\n    static propTypes = {\n        value: PropTypes.string,\n        open: PropTypes.bool,\n    }\n\n    handleDropdownToggle = () => {\n        this.props.dispatch(toggleTypeDropdown());\n    }\n\n    handleDropdownSelect = (type) => {\n        this.props.dispatch(setTypeDropdownValue(type))\n    }\n\n    render() {\n        const { value, open } = this.props;\n\n        return (\n            <ButtonDropdown id='type-dropdown' isOpen={open} toggle={this.handleDropdownToggle}>\n                <DropdownToggle caret outline>\n                    {value === 'expenses' ? 'Expenses' : 'Income'}\n                </DropdownToggle>\n                <DropdownMenu>\n                    <DropdownItem onClick={() => { this.handleDropdownSelect(\"expenses\") }}>\n                        Expenses\n                    </DropdownItem>\n                    <DropdownItem onClick={() => { this.handleDropdownSelect(\"income\") }}>\n                        Income\n                     </DropdownItem>\n                </DropdownMenu>\n            </ButtonDropdown>\n        );\n    }\n}\n\nexport default connect(state => ({\n    value: state.newCategoryForm.typeDropdown.value,\n    open: state.newCategoryForm.typeDropdown.open,\n}))(TypeDropDown);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport ListItem from '@material-ui/core/ListItem';\nimport { Input } from 'reactstrap';\nimport { Modal } from 'react-bootstrap';\nimport { connect } from 'react-redux';\n\nimport TypeDropDown from './TypeDropDown';\n\nimport {\n    toggleModal,\n    resetForm,\n    nameInput,\n    nameInputDanger,\n    createCategory\n} from '../../../states/category-actions';\n\nimport './NewCategoryModal.css';\n\nconst styles = {\n    detail_item: {\n        margin: \"0.5rem 0\",\n    },\n    add_btn: {\n        justifyContent: \"center\",\n        padding: \"1.2rem 0\",\n    }\n};\n\nclass NewCategoryModal extends React.Component {\n\n    static propTypes = {\n        show: PropTypes.bool,\n        name: PropTypes.string,\n        nameInputDanger: PropTypes.bool,\n        type: PropTypes.string,\n    }\n\n    constructor(props) {\n        super(props);\n        this.inputEl = null;\n    };\n\n    handleFormSubmit = () => {\n        const { name, dispatch, type } = this.props;\n\n        if (!name) {\n            dispatch(nameInputDanger(true));\n            return;\n        }\n\n        dispatch(createCategory(type, name));\n        this.handleClose();\n    }\n\n    handleClose = () => {\n        this.props.dispatch(toggleModal());\n        this.props.dispatch(resetForm());\n    }\n\n    handleNameChange = (e) => {\n        const name = e.target.value;\n        this.props.dispatch(nameInput(name));\n        if (name && this.props.nameInputDanger) {\n            this.props.dispatch(nameInputDanger(false));\n        }\n    }\n\n    render() {\n\n        const { classes, show, name } = this.props;\n\n        return (\n            <Modal show={show} onHide={this.handleClose}>\n                <Modal.Body>\n                    <ListItem className={classes.detail_item}>\n                        <div className='modal-item-title'>Type</div>\n                        <div className='modal-item-body'>\n                            <TypeDropDown />\n                        </div>\n                    </ListItem>\n                    <ListItem className={classes.detail_item}>\n                        <div className='modal-item-title'>Name</div>\n                        <div className='modal-item-body'>\n                            <Input\n                                innerRef={el => { this.inputEl = el }}\n                                value={name}\n                                onChange={this.handleNameChange}\n                            />\n                        </div>\n                    </ListItem>\n                </Modal.Body>\n                <Modal.Footer className='p-0'>\n                    <ListItem button={true} className={classes.add_btn} onClick={this.handleFormSubmit}>\n                        Add Category\n                    </ListItem>\n                </Modal.Footer>\n            </Modal>\n        );\n    }\n}\n\nexport default connect(state => ({\n    show: state.newCategoryForm.show,\n    name: state.newCategoryForm.name.value,\n    nameInputDanger: state.newCategoryForm.name.danger,\n    type: state.newCategoryForm.typeDropdown.value,\n}))(withStyles(styles)(NewCategoryModal));","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport NewCategoryModal from './NewCategoryModal';\n\nimport { toggleModal } from '../../../states/category-actions';\n\nimport './NewCategoryBtn.css';\n\nclass NewCategoryBtn extends React.Component {\n\n    toggleModal = () => {\n        this.props.dispatch(toggleModal());\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <button type=\"button\" id='add-category-btn' className=\"btn btn-primary\" onClick={this.toggleModal}>\n                    + New\n                </button>\n                <NewCategoryModal />\n            </React.Fragment>\n        );\n    }\n}\n\nexport default connect()(NewCategoryBtn);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport {\n    ButtonDropdown,\n    DropdownToggle,\n    DropdownMenu,\n    DropdownItem,\n} from 'reactstrap'\n\nimport './TypeDropDown.css';\nimport { setTypeDropdownValue, toggleTypeDropdown, getChart } from '../../../states/chart-actions';\n\nclass TypeDropDown extends React.Component {\n\n    static propTypes = {\n        value: PropTypes.string,\n        open: PropTypes.bool,\n\n        year: PropTypes.number,\n        month: PropTypes.number,\n    }\n\n    handleDropdownToggle = () => {\n        this.props.dispatch(toggleTypeDropdown());\n    }\n\n    handleDropdownSelect = (type) => {\n        const { dispatch, year, month } = this.props;\n\n        dispatch(setTypeDropdownValue(type));\n        dispatch(getChart(year, month, type));\n    }\n\n    render() {\n        const { value, open } = this.props;\n\n        return (\n            <ButtonDropdown id='type-dropdown-for-chart' isOpen={open} toggle={this.handleDropdownToggle}>\n                <DropdownToggle caret outline color=\"dark\">\n                    {value === 'expenses' ? 'Expenses' : 'Income'}\n                </DropdownToggle>\n                <DropdownMenu>\n                    <DropdownItem onClick={() => { this.handleDropdownSelect(\"expenses\") }}>\n                        Expenses\n                    </DropdownItem>\n                    <DropdownItem onClick={() => { this.handleDropdownSelect(\"income\") }}>\n                        Income\n                     </DropdownItem>\n                </DropdownMenu>\n            </ButtonDropdown>\n        );\n    }\n}\n\nexport default connect(state => ({\n    value: state.chart.typeDropdown.value,\n    open: state.chart.typeDropdown.open,\n    month: state.month,\n    year: state.year,\n}))(TypeDropDown);","import React from 'react';\nimport { Switch, Route } from \"react-router-dom\";\n\nimport NewRecordBtn from '../components/record/navbar/NewRecordBtn';\nimport Monthpicker from '../components/record/navbar/Monthpicker';\nimport NewCategoryBtn from '../components/category/navbar/NewCategoryBtn';\nimport TypeDropDown from '../components/chart/navbar/TypeDropDown';\n\nimport './Navbar.css';\n\nclass Navbar extends React.Component {\n\n    render() {\n        return (\n            <Switch>\n                <Route\n                    path=\"/record\"\n                    render={props =>\n                        <div className=\"navbar navbar-white bg-white d-flex justify-content-between\">\n                            <Monthpicker />\n                            <NewRecordBtn />\n                        </div>}\n                />\n                <Route\n                    path=\"/chart\"\n                    render={props =>\n                        <div className=\"navbar navbar-white bg-white d-flex justify-content-start\">\n                            <Monthpicker />\n                            <TypeDropDown />\n                        </div>}\n                />\n                <Route\n                    path=\"/category\"\n                    render={props =>\n                        <div className=\"navbar navbar-white bg-white d-flex justify-content-between\">\n                            <h4 id='navbar-category-title'>Category Settings</h4>\n                            <NewCategoryBtn />\n                        </div>}\n                />\n            </Switch>\n        );\n    }\n}\n\nexport default Navbar;","import React from \"react\";\nimport { NavLink } from \"react-router-dom\"\nimport { slide as Menu } from \"react-burger-menu\";\n\nimport './Sidebar.css';\n\nclass Sidebar extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            menuOpen: false\n        }\n    }\n\n    // This keeps your state in sync with the opening/closing of the menu\n    // via the default means, e.g. clicking the X, pressing the ESC key etc.\n    handleStateChange = (state) => {\n        this.setState({ menuOpen: state.isOpen })\n    }\n\n    // This can be used to close the menu, e.g. when a user clicks a menu item\n    closeMenu = () => {\n        this.setState({ menuOpen: false })\n    }\n\n    render() {\n        return (\n            <Menu {...this.props}\n                isOpen={this.state.menuOpen}\n                onStateChange={(state) => this.handleStateChange(state)}\n            >\n                <NavLink className=\"menu-item\" to=\"/\" onClick={this.closeMenu}>\n                    <i className=\"fas fa-list\"></i>\n                    Record\n                </NavLink>\n\n                <NavLink className=\"menu-item\" to=\"/chart\" onClick={this.closeMenu}>\n                    <i className=\"fas fa-chart-pie\"></i>\n                    Chart\n                </NavLink>\n\n                <NavLink className=\"menu-item\" to=\"/category\" onClick={this.closeMenu}>\n                    <i className=\"fas fa-tags\"></i>\n                    Category\n                </NavLink>\n            </Menu>\n        );\n    }\n};\n\nexport default Sidebar;","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom'\n\nimport Main from './Main';\nimport Navbar from './Navbar';\nimport SideBar from \"../components/Sidebar\";\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div id='App' className='d-flex flex-column app'>\n        <SideBar pageWrapId={\"page-wrap\"} outerContainerId={\"App\"} />\n        <Navbar />\n        <Main />\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, combineReducers, compose, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport { Provider } from 'react-redux';\n\nimport { category, newCategoryForm } from './states/category-reducers';\nimport {\n    recordDetail,\n    editRecordForm,\n    newRecordForm,\n    recordSelected,\n    month,\n    year,\n    record,\n} from './states/record-reducers';\nimport { chart } from './states/chart-reducers';\n\nimport App from './containers/App';\n\nimport 'bootstrap/dist/css/bootstrap.css';\n\nwindow.onload = () => {\n    const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n    const store = createStore(combineReducers({\n        month, year, record, recordSelected, recordDetail, editRecordForm, newRecordForm,\n        category, newCategoryForm,\n        chart,\n    }), composeEnhancers(applyMiddleware(thunkMiddleware)));\n\n    ReactDOM.render(\n        <Provider store={store}>\n            <App />\n        </Provider>,\n        document.getElementById('root')\n    );\n}"],"sourceRoot":""}